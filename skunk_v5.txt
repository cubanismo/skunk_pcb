-Use Cypress EZHost GPIO25 and GPIO28 to drive EEPROM chip select line.
 -Need to AND with CS from Jaguar, so add a tiny 2xAND IC as well.
 -Used XSON8 package 2 channel/2 input AND gate IC, largely because it was all
  that would fit in the remaining available area.  Going to be a pain to
  solder though!

-Needed to reproduce some Rev. 4 modifications:
 -Extend GND/VCC planes over to right edge of board including even more area
  than Rev. 4, but with some room carved out for the vias to the inner
  layers.
 -Raise GND/VCC planes up away from bottom of larger portion of edge
  connector to make room for the four Serial EEPROM control signal traces,
  which will route through the inner two layers that are usually reserved for
  GND/VCC.
 -Routed J0.B40, J0.B42, and J0.B43 through inner layer 1, and J0.A43 through
  inner layer 2 over to right side of board for Serial EEPROM chip select,
  clock, and data in+out lines.
 -Enlarged Mini USB mounting pads to make them more secure
 -Moved version info silkscreen over to left edge of board, updated to
  Rev. 5, thanked Tursi, et al. on the back silkscreen instead of the front.
 -Labeled JTAG pins on back silkscreen using Inkscape, FreeSans font in bold
  at 4pt.

-Additional layout modifications:
  -Flipped C1 horizontally to make room for vias to route GPIO lines on back
   of board to get around C1 and JTAG traces
  -Rerouted nearby JTAG traces to make space for vias near
   GPIO25 and GPIO28
  -Move X1 down to make more space for GPIO traces to pass through near
   cartridge mount hole under USB 2/J3
  -Rerouted one of the XTAL/clock traces under U1/EZHost to free up space for
   vias back to the front of the board under the J2/USB 2 connector
   * Risky, moves clock very close to R1 trace, and JTAG trace a little
     closer to sensitive USB D+/D- vias.
  -Added U5, and U6, pads for 93C46/93C66/93C86 Serial EEPROM save-game
   chips. Unlike Rev. 4, connect pins 6 and 7 to VCC to ensure 16-bit
   organization is selected and write-protection is disabled if using the
   variants of these chips that support such features. on other variants,
   these pins are not connected, so there will be no change in behavior.
  -Added U7, pads for a tiny XSON8 dual AND gate IC which will assist the
   GPIO lines in selecting between the two Serial EEPROM save-game chips.
  -Added public-domain 2020 copyright line on back silkscreen.
  -Added an "SE (special edition)" to the skunk logo on the back silkscreen.
  -Added edge connector pin labels to the back silkscreen.
 -Manually carved out soldermask around pads of parts with <0.3mm space
  between pads (U1, U2, U3, U4, U7), lowered soldermask pad swell to 3mil,
  per soldermask manufacturing limits research detailed below.

-Don't put traces too close to USB traces: See notes in
 pcb3/pcb/usbhub-layout.pdf for details. These traces prefer privacy. Note
 the GPIO25/GPIO28 vias are closer to the J1 USB signal traces than I would
 like, but there's really no avoiding it. The board is very crowded here. In
 theory, smaller vias could be used, as was done when routing the serial
 EEPROM edge connector pins, but I tried to avoid relying on that too much.
 Best not to push manufacturing capabilities to the limit if you want to go
 with the cheap manufacturers. The smaller vias push the board into most
 manufacturers' "advanced" category as it is.

-See butcher/butcher.txt for details on the weird GPIO routing on EZHost top
 edge (looking at it in the orientation it is in on the PCB) and how it
 allows proper booting.

-Soldermask minimum web (clearance between pads to allow mask between them):
 -The minimum pad spacing on the board is 0.2mm (~7.874mil). If the minimum
  web is less than that, we can't get any mask between the smaller pads,
  which would make hand-soldering more difficult.
  -Osh Park claims minimum soldermask web is 0.102mm (4mil)
  -PCBWay claims minimum soldermask web (bridge) for advanced PCBs is 0.102mm
   (4mil) for "black" soldermask, which I'm assuming means all non-green.
  -JLCPCB claims minimum soldermask web is 0.254mm (10mil) for non-green
   masks, 0.2mm for green. This seems high, but they also appear to include
   expansion in their web/bridge min, whereas other places don't. If you
   calculate it out, an expansion of 3mil * 2 + 4mil minimum web, you get
   10mil, or 0.254mm, so that must be what they're capable of in practice,
   even though they claim 0.05mm/2mil expansion.
  
-Soldermask expansion ("Swell pads for soldermask" in FreePCB CAM dialog):
 -The project had this set to 7.874mil (~0.2mm), which seems huge. Perhaps
  this was just to avoid attempting tiny bridges between the 0.2mm-spaced
  pads. Assuming that was the case, I set it to 6mils for now, which still
  easily wipes out the mask around the QFN/MSOP/TSOP/XSON8 parts, and just
  covers the 0.3mm space between the USB mini connector pads as well.
 -allpcb claims the industry standard is ~4mil (~0.102mm) to account for
  growth, retraction and shift.
 -Osh Park claims a maximum of 3mil (0.077mm)
 -PCBWay doesn't list a number here, but a blog from 2014 says, for SMD pads,
  0.05mm (~2mil) is good, 0.075mm (~3mil) is better. The same blog claims a
  minimum web of 0.15mm (~6mil): 0.05 * 2 + 0.15mm = 0.25mm pad spacing.
 -JLCPCB claims 0.05mm (~2mil) is acceptable, but see above. 3mil is probably
  more realistic.

-Soldermask conclusions:
 -What this comes down to is we can't quite get soldermask between the 0.2mm-
  spaced pads and stay within specs for non-green boards. Hrmph. The smart
  thing to do would probably be to just order green boards.  Oshpark only
  supports the purple ones though, so I guess we can just get some prototypes
  made without solder bridge between the fine-pitch parts and see how it
  goes soldering them.
 -The Rev. 4 boards didn't have soldermask between any of the 0.5mm pin-pitch
  parts, nor even betweeen the mini USB connector pins, which have 0.3mm of
  space between them, and I managed (with much trouble) to hand-solder those.
 -To take advantage of 3mil/0.075mm mask tolerances, should manually carve
  out regions from solder-mask around 0.5mm pin pitch parts (U1, U2, U3, U4,
  U7), and set soldermask pad swell in FreePCB to 3mils.

-Back silkscreen workflow:
 -Original board back silkscreen appears to have been manually generated
  from a PDF->DFX->gerber conversion process, using an evaluation copy of
   Fab It! 2008 Version 3.4.8 from Numerical Innovations. I preferred to
   use freely available tools if possible, so I used an alternate method.
 -I took the following steps to generate the back silkscreen:
  -Opened the z_misc/skunklogo_dfx_1.pdf file from the skunkboard full relase
   archive in Inkscape 0.92.3, using the default import options.
  -Saved it as an SVG
  -Opened the SVG, scaled it to about 33%, set the canvas size to the
   skunkboard board size (94mm x 37.5mm)
  -Merged the "cut-out" paths (inside of the second 'K', the letters in the
   circles by selecting them and their containing sections and taking the
   difference of the two paths (Had to do this in multiple steps for some of
   the letters in circles).
  -Opened the board outline, back copper, and top copper layer PNGs, each in
   its own layer, and manually aligned them within the canvas.
  -Manually aligned the board outline PNG by lining up the center of the top/
   bottom/side edges with the canvas outline in Inkscape while zoomed way in.
  -Manually traced a path around the center of the board outline in the PNG,
   removed the bitmap outline.  Then converted each of the copper layers to a
   path by using "Path->Trace bitmap" with default settings.
  -Lowered the opacity of all the non-logo layers.
  -Flipped the three objects created from PNGs horizontally (Looking at back
   of board here).
  -Manually aligned the copper layers by measuring the distances from the
   board edges to key traces in a gerber viewer looking at the actual gerber
   files, and then duplicating those offsets in Inkscape.
  -Manually perspective-correct scaled and placed the skunk logo by comparing
   it with a reference Rev. 4 skunkboard PCB, using landmarks such as vias on
   the copper layers as references.
  -Placed some rectangles near the left and right edges of the board, and in
   between the top of the alignment finger cutout in an "edge markers" layer
   for use when verifying alignment during the gerber conversion step.
  -Made edits to customize the logo and place various other info on the back
   silkscreen for Rev. 5.
 -Workflow used to convert the SVG to a Gerber file in Cenon (FAILED!)
  -Install Cenon (cenon.app on Ubuntu)
  -Make a copy of back_silk.svg and open it in Inkscape
  -Delete all layers except "background" and "back silk".
   -Leave "edge markers" too if you want to do a trial run and verify
    alignment in a gerber viewer.
  -Edit->"Select all in all layers"
  -Object->"Flip horizontal"
  -Delete the "background" layer.
  -Save the file and open it in Cenon
  -Edit->"Select all"
  -Tools->"Transform Panel" and select "Move"
  -Select "Move Relative" and move X: -15.95, Y -9.9
   -Note: Exact value would be -10, -16.0198 to be exact, as Cenon for some
    reason offsets everything by 10 in its canvas, and the origin of the
    skunkboard layout is offset in the X direction by 237mils, at the bottom-
    left edge of the connector finger. However, my manual alignments in
    Inkscape are probably off by just a bit. Perhaps I will attempt to re-
    align now that I've worked this out.
   -This move will probably make things look funky in Cenon, since it puts
    objects at negative coordinates, and Cenon just "wraps" them around on
    the canvas. Don't worry about it, the generated gerber code comes out
    looking fine.
  -File->"Save as", and save it as a gerber file.
  -Copy this gerber file over the one output by FreePCB for the back silk
   screen layer, and take a look at it in a gerber viewer to verify your
   results.
  -XXX This worked before I sliced up the skunk logo to add the JTAG lables,
   the public domain copyright, and the edge connector labels, but fails with
   the more complex final back_silk.svg! Tried both with SVG and PDF import
   in Cenon
  -XXX Also tried reaConverter, no go. Also, no way to align things properly
   in here AFAICT.
  -XXX Tried svg2gerber (https://github.com/iliis/svg2gerber), but it failed
   even on the simpler version of the silkscreen.
 -Workflow used to convert the SVG to a Gerber file using svg2shenzen/KiCad:
  -Upgraded to Inkscape 1.0
  -Installed the svg2shenzen extension version 0.2.18.7
   (https://github.com/badgeek/svg2shenzhen)
  -Make a copy of back_silk.svg and open it in Inkscape
  -Delete all layers except "background" and "back silk".
   -Leave "edge markers" too if you want to do a trial run and verify
    alignment in a gerber viewer.
  -Edit->"Select all in all layers"
  -Object->"Flip horizontal"
  -Delete the "background" layer.
  -Extensions->Svg2Shenzen->Prepare Document
   -Document width: 94
   -Document height: 37.5
   -Select layers to use: "B.SilkS"
   -Other: <Nothing should be checked here>
  -Apply, Close
  -Make the new "[fixed] BG" layer non-visible so you can see the content
   again, and Edit->"Select all" if it isn't selected anymore
  -Set fill to black.
  -Right-click on the selected content, "Move to layer"
   -Select the new B.SilkS layer
  -Make the "[fixed] BG" layer visible again
  -Extensions->Svg2Shenzen->"Export to KiCad"
   -Export as: Project
   -Threshold: 1
   -Export DPI: 1200
  -Open the exported project in KiCad (If you didn't have the extension do it
   for you).
  -Click on the logo to select it.
  -Right-click and select "Move Exactly" or press Ctrl-M
   -X: 41.15
   -Y: -18.75
  -File->"Plot"
  -Uncheck every layer except "B.SilkS"
   -General options: Unselect everything except "Check zone fills before..."
   -Gerber options: "Unselect everything except "Use extended X2 format",
    set "Coordinate format" to "4.6, unit mm"
  -Plot
  -Copy <your_kicad_project_dir>/gerbers/back_silk_tmp-B_SilkS.gbr to your
   board CAM files directory, overwriting bottom_silk.grb.
  -Look at it in a gerber viewer along with the other board layers to verify
   results/alignment.

-Final design checklist:
 -Triple-check Serial EEPROM pin->Jaguar pin mapping -- DONE!
 -Triple-check EZHost GPIO routing -- DONE!
 -Copy & modify the manufacturing readme.txt from the old releases as
  necessary for the new gerber zip file.
 -Review board in Gerber viewer one last time.
 
-Notes on wiring for Prototype on Rev. 4 PCB:
 -Green ========= Cypress EZHost pin 45, GPIO25, 74LVC2G08 pin 1, 1A
 -Yellow ======== Cypress EZHost pin 42, GPIO28, 74LVC2G08 pin 5, 2A
 -White ========= Jaguar pin B43, GPIO1/SF_CS, 74LVC2G08 pins 2/6, 1B/2B
 -Blue ========== 93Cx6(U5) pin 1, CS, 74LVC2G08 pin 7, 1Y
 -Black ========= 93Cx6(U5/U6) pin 2, SK, Jaguar pin B42, GPIO0
 -Red =========== 93Cx6(U5/U6) pin 3, DI, Jaguar pin A23, ED0
 -Yellow/Orange = 93Cx6(U5/U6) pin 4, DO, Jaguar pin B40, E2DATA
